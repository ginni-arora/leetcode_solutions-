/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: 
int height(TreeNode* root)
{
    if(!root) return 0;
    // if(!root->left&&!root->right)
    // {
    //     return 0;
    // }

    int l= height(root->left);
    int r=height(root->right);
    return 1+max(l,r);
}
    void solve(TreeNode* root,int &ans)
    {
        if(!root) return ;
        int lh=height(root->left);
        int rh=height(root->right);
        ans=max(ans,lh+rh);
        solve(root->left,ans);
        solve(root->right,ans);
    }
    int diameterOfBinaryTree(TreeNode* root) {
        int ans=0;
        solve(root,ans);
        return ans;
    }
};
