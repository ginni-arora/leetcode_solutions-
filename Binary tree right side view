/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
     
        vector<int> ans;
        if(!root)
        return ans;// recursion
        //ab ek m queue bnaogi 
        queue<TreeNode*>q;
        //ab m queue m push karugi root ko
        q.push(root);
        while(!q.empty()){
        int  n=q.size();
        int temp= n;
        vector<int>t;
         while(n--) {
         TreeNode*front = q.front();
         q.pop();//ab maine q ki value ko delete kr diya 
         //ab m q ke front ko t ke vector m pushback karugi
         t.push_back(front->val);
         if(front->left )q.push(front->left);
         if(front->right)q.push(front->right);
         }
            ans.push_back(t[temp-1]);

        }

return ans;

    }
    
};
